{
    "config": {
        "step": {
            "user": {
                "title": "(1 of 3) Person Location Geocode",
                "description": "Reverse geocoding and mapping can be done using one (or more) external services.  If you need help with the configuration or obtaining keys, have a look at More Details [**here**](https://github.com/rodpayne/home-assistant_person_location/blob/master/README.md#configuration-parameters).",
                "data": {
                    "language": "Google Language",
                    "region": "Google Region",
                    "google_api_key": "Google API Key",
                    "mapbox_api_key": "Mapbox Access Token",
                    "mapquest_api_key": "MapQuest API Key",
                    "osm_api_key": "OSM API Key (your eMail Address)"
                }
            },
            "sensors": {
                "title": "(2 of 3) Person Location Sensors",
                "description": "We can create individual sensors so that template sensors do not need to be manually configured. Choose from this list: altitude, bread_crumbs, direction, driving_miles, driving_minutes, geocoded, latitude, longitude, meters_from_home, miles_from_home.  If you need help with the configuration, have a look [**here**](https://github.com/rodpayne/home-assistant_person_location/blob/master/README.md#configuration-parameters).",
                "data": {
                    "create_sensors": "Sensors to be created",
                    "platform": "Platform for output sensor (experimental)"
                }
            },
            "triggers": {
                "title": "(3 of 3) Person Location Triggers",
                "description": "You can follow updates of all Person entities rather than configuring individual Triggers. The individual Triggers may be specified by clicking CONFIGURE for the integration. If you need help with the configuration, have a look [**here**](https://github.com/rodpayne/home-assistant_person_location/blob/master/README.md#configuration-parameters).",
                "data": {
                    "follow_person_integration": "Follow Person Integration"
                }
            }
        },
        "error": {
            "sensor_invalid": "Invalid sensor entered.",
            "invalid_key": "API key not accepted.",
            "invalid_email": "eMail address is not valid.",
            "nothing_was_changed": "No changes were entered for the configuration."
        },
        "abort": {
            "already_configured": "Already configured and only a single instance is allowed.",
            "normal exit": "The previous entry has been updated rather than creating a new one."
        }
    },
    "options": {
        "step": {
            "init": {
                "title": "(1 of 2) Person Location Options",
                "description": "If you need help with the configuration, have a look [**here**](https://github.com/rodpayne/home-assistant_person_location/blob/master/README.md#configuration-parameters).",
                "data": {
                    "extended_away": "Hours Extended Away",
                    "just_arrived": "Minutes Just Arrived",
                    "just_left": "Minutes Just Left",
                    "friendly_name_template": "Friendly Name Template",
                    "show_zone_when_away": "Show zone when away?",
                    "create_sensors": "Sensors to be created"
                }
            },
            "triggers": {
                "title": "(2 of 2) Person Location Triggers",
                "description": "If you need help with the configuration, have a look [**here**](https://github.com/rodpayne/home-assistant_person_location/blob/master/README.md#configuration-parameters).",
                "data": {
                    "follow_person_integration": "Follow Person Integration - rather than looking at individual device trackers?",
                    "devices": "Trigger Entities (uncheck to remove)",
                    "new_device": "Trigger Entity to add",
                    "new_person_name": "Person Name for entity"
                }
            }
        },
        "error": {
            "device_and_name_required": "Both entity and person name are required to add a new trigger.",
            "new_device_not_found": "The new entity does not exist.",
            "new_device_wrong_domain": "The new entity is not in an allowed domain.",
            "nothing_was_changed": "No changes were entered for the configuration."
        }
    },
    "services": {
        "reverse_geocode": {
            "name": "Reverse Geocode",
            "description": "Service to reverse geocode the location in a person status sensor.",
            "fields": {
                "entity_id": {
                    "name": "Entity ID",
                    "description": "Name of the entitity to examine and update."
                },
                "force_update": {
                    "name": "Force Update",
                    "description": "Should geocoding be done even if the distance is less than MIN_DISTANCE_TRAVELLED (5 meters) (optional)?"
                },
                "friendly_name_template": {
                    "name": "Friendly Name Template",
                    "description": "Template for the entitiy's friendly_name (optional)."
                }
            }
        },
        "geocode_api_on": {
            "name": "Geocode API On",
            "description": "Resume using the Open Street Map API and WazeRouteCalculator."
        },
        "geocode_api_off": {
            "name": "Geocode API Off",
            "description": "Pause using the Open Street Map API. This may be necessary if a malfunction causes an excessive number of calls or if the external site is unreachable. The Nominatim Usage Policy says, 'Apps must make sure that they can switch off the service at our request at any time (in particular, switching should be possible without requiring a software update).' This also pauses the WazeRouteCalculator calls."
        },
        "process_trigger": {
            "name": "Process Trigger",
            "description": "Service to process the changes of a device tracker or sensor.",
            "fields": {
                "entity_id": {
                    "name": "Entity ID",
                    "description": "Name of the device tracker or sensor that has changed."
                },
                "from_state": {
                    "name": "From State",
                    "description": "The previous state."
                },
                "to_state": {
                    "name": "To State",
                    "description": "The updated state."
                }
            }
        }
    }
}